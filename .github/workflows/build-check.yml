name: Build Check

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'frontends/**'

env:
  NODE_VERSION: '24.2.0'
  PNPM_VERSION: '10.9.0'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
      has-changes: ${{ steps.changes.outputs.has-changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changed microfrontends
        id: changes
        run: |
          CHANGED_FILES=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }})
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          CHANGED_MFS=$(echo "$CHANGED_FILES" | grep "^frontends/" | cut -d'/' -f2 | sort -u)
          
          if [ -z "$CHANGED_MFS" ]; then
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
            echo "No microfrontends changed"
            exit 0
          fi
          
          echo "Changed microfrontends:"
          echo "$CHANGED_MFS"
          
          MATRIX_INCLUDE=""
          for MF in $CHANGED_MFS; do
            if [ -d "frontends/$MF" ]; then
              VERSION=$(cat frontends/$MF/package.json | grep '"version"' | sed 's/.*"version": "\([^"]*\)".*/\1/')
              if [ -z "$MATRIX_INCLUDE" ]; then
                MATRIX_INCLUDE="{\"name\":\"$MF\",\"version\":\"$VERSION\"}"
              else
                MATRIX_INCLUDE="$MATRIX_INCLUDE,{\"name\":\"$MF\",\"version\":\"$VERSION\"}"
              fi
            fi
          done
          
          if [ -n "$MATRIX_INCLUDE" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[$MATRIX_INCLUDE]}" >> $GITHUB_OUTPUT
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "matrix={\"include\":[]}" >> $GITHUB_OUTPUT
          fi

  build-check:
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          cd frontends/${{ matrix.name }}
          pnpm install --frozen-lockfile

      - name: Build microfrontend
        run: |
          cd frontends/${{ matrix.name }}
          pnpm run build

      - name: Build summary
        run: |
          echo "âœ… Built ${{ matrix.name }} version ${{ matrix.version }}" 